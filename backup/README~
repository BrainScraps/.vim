1. "Write a program that prints the numbers from 1 to 100. But for multiples of three print “Fizz” instead of the number and for the multiples of five print “Buzz”. For numbers which are multiples of both three and five print “FizzBuzz”."

Example Answer

1..100.each do |i|
  if (i%3 != 0 && i%5 != 0)
    puts i
  else
    print "fizz" if (i%3 == 0)
    print "buzz" if (i%5 == 0)
  end
end

Another answer

(1..100).each do |i|
  if (i%15 == 0)
    puts "fizzbuzz"
  else if (i%3 == 0)
    puts "fizz"
  else if (i%5 == 0)
    puts "buzz"
  else
    puts i
  end
end

2. "Write a program which determines if a string is an palindrome, i.e. spelled backwards and forwards the same".

def isPalindrome?(str)
  return str.gsub(" ","").reverse == str.gsub(" ","")
end


More Advanced version

def isPalindrome?(str)
  (str.length / 2).times do |i|
    return false unless str[i] == str[str.length - i - 1]
  end
  return true
end


3. You are designing a Rails application for a Pet Shelter. Please describe the relationships between the following models using built-in ActiveRecord conventions: 
  - Adoption
  - Animal
  - Client (this a human that adopts animals)
  - Medications
  - Transactions (when someone pays adoption fees) 

Example Answers: 
  Adoption
    belongs_to :animal
    belongs_to :client
    has_many :transactions
  
  Animal
    has_many :medications
    belongs_to :client
    belongs_to :adoption

  Client
    has_many :transactions
    has_many :adoptions
    has_many :animals
  
  Medication
    belongs_to :animal

  Transaction
    belongs_to :animal


4. Write the ERB for a New Client form. The attributes we want to capture are :fname, :lname, :phone, and :email . It should post to /clients

Answer

<%= form_for :client do |f| %>
  <%= f.label :fname %>
  <%= f.text_field :fname %>
  <%= f.label :lname %>
  <%= f.text_field :lname %>
  etc.....
  <%= f.submit %>
<% end %>

5. If you wanted to make the name and email fields required, how would you enforce that using Rails conventions? What would you do if you wanted to enforce that before submitting the form to the server (client side) ? 
  something like: 
  <%= render "shared/error_messages", :target => @user %>  
  
  client-side: 
    many gems available or write your own js. 
   
6. Basic ruby questions


What is a class? A class is a file which contains a set of methods and attribute descriptions
What is an object? An object is an instance of a class. You can invoke any method defined in the class on this object.
What is a module? A module can act as 2 things. It can act as a namespace i.e. Blah::Blah. It can also act as a set of methods which you can include. (Kinda acts like an interface in Java)
What are the 3 ways to invoke a function? .method .send(:method) .method(:method).call
Explain this statement a ||= b. This is a shortcut for a = a || b.
What is "self"? in a ruby class? Self refers to the current object in context. Since Ruby classes are also objects, refering to self in a class method will refer to the class itself.
What is a Proc? A proc is an anonymous function you can pass around like a variable.
What is a unit test? A unit test is a test which tests that an expectation is met when the function is executed with a given set of parameters.
Is ruby strongly typed? Yes.
Are there any primatives in ruby? No.
